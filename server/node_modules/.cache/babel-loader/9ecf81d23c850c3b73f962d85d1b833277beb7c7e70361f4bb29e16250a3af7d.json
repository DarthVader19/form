{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashut\\\\OneDrive\\\\Desktop\\\\codes\\\\vscode\\\\javascript\\\\chatgpt\\\\project\\\\portfolio\\\\src\\\\frontend\\\\components\\\\chatbot.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Chatbot extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      messages: []\n    };\n    this.handleMessageSubmit = event => {\n      event.preventDefault();\n\n      // Get the message from the form field\n      const message = event.target.message.value;\n\n      // Send a request to the server to get a response from the chatbot\n      fetch('http://local/api/chatbot', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          message\n        })\n      }).then(response => response.json()).then(data => {\n        // Add the message and chatbot response to the messages array\n        this.setState(state => ({\n          messages: [...state.messages, {\n            sender: 'user',\n            text: message\n          }, {\n            sender: 'chatbot',\n            text: data.response\n          }]\n        }));\n      });\n\n      // Clear the form field\n      event.target.message.value = '';\n    };\n  }\n  render() {\n    const {\n      messages\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleMessageSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [message.sender, \": \", message.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default Chatbot;","map":{"version":3,"names":["React","Chatbot","Component","state","messages","handleMessageSubmit","event","preventDefault","message","target","value","fetch","method","headers","body","JSON","stringify","then","response","json","data","setState","sender","text","render","map","index"],"sources":["C:/Users/ashut/OneDrive/Desktop/codes/vscode/javascript/chatgpt/project/portfolio/src/frontend/components/chatbot.js"],"sourcesContent":["import React from 'react';\r\n\r\nclass Chatbot extends React.Component {\r\n  state = {\r\n    messages: [],\r\n  };\r\n\r\n  handleMessageSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Get the message from the form field\r\n    const message = event.target.message.value;\r\n\r\n    // Send a request to the server to get a response from the chatbot\r\n    fetch('http://local/api/chatbot', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ message }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        // Add the message and chatbot response to the messages array\r\n        this.setState((state) => ({\r\n          messages: [...state.messages, { sender: 'user', text: message }, { sender: 'chatbot', text: data.response }],\r\n        }));\r\n      });\r\n\r\n    // Clear the form field\r\n    event.target.message.value = '';\r\n  };\r\n\r\n  render() {\r\n    const { messages } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleMessageSubmit}>\r\n          <input type=\"text\" name=\"message\" />\r\n          <button type=\"submit\">Send</button>\r\n        </form>\r\n        <div>\r\n          {messages.map((message, index) => (\r\n            <div key={index}>\r\n              <p>{message.sender}: {message.text}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Chatbot;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC;AAE1B,MAAMC,OAAO,SAASD,KAAK,CAACE,SAAS,CAAC;EAAA;IAAA;IAAA,KACpCC,KAAK,GAAG;MACNC,QAAQ,EAAE;IACZ,CAAC;IAAA,KAEDC,mBAAmB,GAAIC,KAAK,IAAK;MAC/BA,KAAK,CAACC,cAAc,EAAE;;MAEtB;MACA,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAACD,OAAO,CAACE,KAAK;;MAE1C;MACAC,KAAK,CAAC,0BAA0B,EAAE;QAChCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER;QAAQ,CAAC;MAClC,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;QACd;QACA,IAAI,CAACC,QAAQ,CAAElB,KAAK,KAAM;UACxBC,QAAQ,EAAE,CAAC,GAAGD,KAAK,CAACC,QAAQ,EAAE;YAAEkB,MAAM,EAAE,MAAM;YAAEC,IAAI,EAAEf;UAAQ,CAAC,EAAE;YAAEc,MAAM,EAAE,SAAS;YAAEC,IAAI,EAAEH,IAAI,CAACF;UAAS,CAAC;QAC7G,CAAC,CAAC,CAAC;MACL,CAAC,CAAC;;MAEJ;MACAZ,KAAK,CAACG,MAAM,CAACD,OAAO,CAACE,KAAK,GAAG,EAAE;IACjC,CAAC;EAAA;EAEDc,MAAM,GAAG;IACP,MAAM;MAAEpB;IAAS,CAAC,GAAG,IAAI,CAACD,KAAK;IAE/B,oBACE;MAAA,wBACE;QAAM,QAAQ,EAAE,IAAI,CAACE,mBAAoB;QAAA,wBACvC;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC;QAAS;UAAA;UAAA;UAAA;QAAA,QAAG,eACpC;UAAQ,IAAI,EAAC,QAAQ;UAAA,UAAC;QAAI;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9B,eACP;QAAA,UACGD,QAAQ,CAACqB,GAAG,CAAC,CAACjB,OAAO,EAAEkB,KAAK,kBAC3B;UAAA,uBACE;YAAA,WAAIlB,OAAO,CAACc,MAAM,EAAC,IAAE,EAACd,OAAO,CAACe,IAAI;UAAA;YAAA;YAAA;YAAA;UAAA;QAAK,GAD/BG,KAAK;UAAA;UAAA;UAAA;QAAA,QAGhB;MAAC;QAAA;QAAA;QAAA;MAAA,QACE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAEV;AACF;AAEA,eAAezB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}